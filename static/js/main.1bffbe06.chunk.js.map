{"version":3,"sources":["Component/HeroCard/index.js","Component/Title/index.js","App.js","index.js"],"names":["HeroCard","props","react_default","a","createElement","Card","Content","className","key","onClick","e","handleClick","data-id","id","Image","src","Title","Fragment","Navbar","Brand","Toggle","Menu","fixed","inverted","Container","Item","header","score","highScore","App","state","heroChosen","randomOrder","array","shuffle","event","cardId","target","getAttribute","_this","includes","gameOver","push","newScore","setState","gameWin","alert","_this2","this","Component_Title","Group","heros","map","image","Component_HeroCard","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+iCAsDeA,EA5CE,SAACC,GAAD,OAOfC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEEH,EAAAC,EAAAC,cAACC,EAAA,EAAKC,QAAN,CACEC,UAAU,MACVC,IAAKP,EAAMO,IACXC,QAAS,SAAAC,GAAC,OAAIT,EAAMU,YAAYD,IAChCE,UAASX,EAAMY,IAGfX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,IAAKd,EAAMc,IAChBH,UAASX,EAAMY,qDCGRG,MAxBf,SAAef,GACb,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACc,EAAA,EAAOC,MAAR,2EACAjB,EAAAC,EAAAC,cAACc,EAAA,EAAOE,OAAR,MACAlB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQX,UAAU,6BAGpBL,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,MAAM,MAAMC,UAAQ,GACxBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACiB,EAAA,EAAKI,KAAN,CAAWC,QAAM,GACfxB,EAAAC,EAAAC,cAAA,qCAGFF,EAAAC,EAAAC,cAACiB,EAAA,EAAKI,KAAN,eAAmBxB,EAAM0B,OACzBzB,EAAAC,EAAAC,cAACiB,EAAA,EAAKI,KAAN,oBAAwBxB,EAAM2B,eC+EzBC,6MA7EbC,MAAQ,CACNH,MAAO,EACPI,WAAY,GACZH,UAAW,KAGbI,YAAc,SAAAC,GAEZ,OADiBC,IAAQD,MAI3BtB,YAAc,SAACwB,GACb,IAAIC,EAASD,EAAME,OAAOC,aAAa,WACvC,GAAIC,EAAKT,MAAMC,WAAWS,SAASJ,GACjCG,EAAKE,eAEF,CACHF,EAAKT,MAAMC,WAAWW,KAAKN,GAC3B,IAAIO,EAAWJ,EAAKT,MAAMH,MAAQ,EAE9BY,EAAKT,MAAMF,WAAaW,EAAKT,MAAMH,OACrCY,EAAKK,SAAS,CACZjB,MAAOgB,EACPf,UAAWe,IAGY,IAArBJ,EAAKT,MAAMH,OACbY,EAAKM,WAGPN,EAAKK,SAAS,CACZjB,MAAOY,EAAKT,MAAMH,MAAQ,QAMlCc,SAAW,WACTK,MAAM,0BACNP,EAAKK,SAAS,CACZb,WAAY,GACZJ,MAAO,OAIXkB,QAAU,WACRC,MAAM,YACNP,EAAKK,SAAS,CACZb,WAAY,GACZJ,MAAO,6EAIF,IAAAoB,EAAAC,KACP,OACE9C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACEf,EAAAC,EAAAC,cAAC6C,EAAD,CACEtB,MAAOqB,KAAKlB,MAAMH,MAClBC,UAAWoB,KAAKlB,MAAMF,YACxB1B,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAWjB,UAAU,WACnBL,EAAAC,EAAAC,cAACC,EAAA,EAAK6C,MAAN,KACGF,KAAKhB,YAAYmB,GAAOC,IAAI,SAAAC,GAAK,OAAInD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAc,SAAA,KACpCf,EAAAC,EAAAC,cAACkD,EAAD,CACEvC,IAAKsC,EAAMA,MACX1C,YAAaoC,EAAKpC,YAClBE,GAAIwC,EAAMxC,kBAlER0C,2BCjBlBC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1bffbe06.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n// import Wrapper from \"./components/Wrapper\";\nimport { Card, Image } from 'semantic-ui-react';\n// import { Button } from 'semantic-ui-react'\n\n\n\n\n\nconst HeroCard = (props) => (\n  // return (\n  // <div>test</div>\n\n  // < Button > Click Here</Button>\n\n\n  <Card>\n\n    <Card.Content\n      className=\"box\"\n      key={props.key}\n      onClick={e => props.handleClick(e)}\n      data-id={props.id}\n    >\n\n      <Image src={props.src}\n        data-id={props.id} />\n\n    </Card.Content>\n  </Card>\n\n\n\n  // );\n)\n// function HeroCard(props) {\n//   return (\n//     <Card>\n//       <Card.content\n//         className=\"box\"\n//         key={props.key}\n//         onClick={e => props.handleClick(e)}\n//         data-id={props.id}\n//       >\n\n//         <Image src={props.src}\n//           data-id={props.id} />\n\n//       </Card.content>\n//     </Card>\n//   );\n// }\n\nexport default HeroCard;\n","import React from \"react\";\n// import \"./style.css\";\nimport { Navbar } from 'react-bootstrap';\nimport { Menu } from 'semantic-ui-react';\nimport { Container } from 'semantic-ui-react';\n\nfunction Title(props) {\n  return (\n    <>\n      <Navbar>\n        <Navbar.Brand>It's Game Time. Click all the heroes, but don't click them twice..</Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar className=\"justify-content-justify\">\n        </Navbar>\n      </Navbar>\n      <Menu fixed='top' inverted>\n        <Container>\n          <Menu.Item header>\n            <h2>Keep Track of the Cast</h2>\n          </Menu.Item>\n\n          <Menu.Item>Score: {props.score}</Menu.Item>\n          <Menu.Item>High Score: {props.highScore}</Menu.Item>\n        </Container>\n      </Menu>\n    </>\n  )\n  // <h1 className=\"title\">{props.children}</h1>;jljkl\n}\n\nexport default Title;\n","// import React from \"react\";\n// import Wrapper from \"./Component/Wrapper\";\n\n// function App() {\n//   render() {\n//     return (\n//       <>\n//         <Wrapper />\n//       </>\n//     )\n//   }\n\n// }\n// export default App;\n\nimport React, { Component } from \"react\";\nimport \"./Component/Wrapper/style.css\";\nimport { Container, Card } from \"semantic-ui-react\";\nimport HeroCard from \"./Component/HeroCard\";\nimport heros from \"./heros.json\";\nimport shuffle from \"shuffle-array\";\nimport Title from \"./Component/Title\";\n\nclass App extends Component {\n  state = {\n    score: 0,\n    heroChosen: [],\n    highScore: 0\n  };\n\n  randomOrder = array => {\n    const newArray = shuffle(array);\n    return newArray;\n  }\n\n  handleClick = (event) => {\n    let cardId = event.target.getAttribute(\"data-id\");\n    if (this.state.heroChosen.includes(cardId)) {\n      this.gameOver();\n    }\n    else {\n      this.state.heroChosen.push(cardId);\n      let newScore = this.state.score + 1\n\n      if (this.state.highScore <= this.state.score) {\n        this.setState({\n          score: newScore,\n          highScore: newScore\n        });\n\n        if (this.state.score === 8) {\n          this.gameWin();\n        }\n      } else {\n        this.setState({\n          score: this.state.score + 1\n        })\n      }\n    }\n  }\n\n  gameOver = () => {\n    alert(\"You lose... try again?\");\n    this.setState({\n      heroChosen: [],\n      score: 0\n    });\n  }\n\n  gameWin = () => {\n    alert(\"You won!\");\n    this.setState({\n      heroChosen: [],\n      score: 0\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Title\n          score={this.state.score}\n          highScore={this.state.highScore} />\n        <Container className=\"mainBox\">\n          <Card.Group>\n            {this.randomOrder(heros).map(image => <>\n              <HeroCard\n                src={image.image}\n                handleClick={this.handleClick}\n                id={image.id}\n              />\n            </>\n            )}\n          </Card.Group>\n        </Container>\n      </>\n\n    )\n  }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}